"use strict";var ApplicationConfiguration=function(){var applicationModuleName="off-the-fence",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||["angularFileUpload"]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("email-lists"),ApplicationConfiguration.registerModule("photos"),ApplicationConfiguration.registerModule("shows"),ApplicationConfiguration.registerModule("users"),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("bio",{url:"/bio",templateUrl:"modules/core/views/bio.client.view.html"}).state("videos",{url:"/videos",templateUrl:"modules/core/views/videos.client.view.html"}).state("photos",{url:"/photos",templateUrl:"modules/core/views/photos.client.view.html"}).state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("shows",{url:"/shows",templateUrl:"modules/core/views/shows.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$rootScope","$location","$window","$scope","$timeout","Authentication","EmailLists","Shows","Photos",function($rootScope,$location,$window,$scope,$timeout,Authentication,EmailLists,Shows,Photos){$scope.authentication=Authentication,$scope.thankYou=!1,$scope.mainPage=!0,$scope.showPhotoPreview=!1,$scope.loginAllowed=!1,$scope.photoIndex=0,$scope.photoPage=1,$scope.numPerPage=12,$rootScope.imagesPreloaded=!1,$scope.sayThankYou=function(){$scope.mainPage=!1,$timeout(function(){$scope.thankYou=!0},700),$timeout(function(){$scope.thankYou=!1},5800),$timeout(function(){$scope.mainPage=!0},6500)},$scope.saveToMailingList=function(){var emailList=new EmailLists({firstName:this.firstName,lastName:this.lastName,email:this.email,zip:this.zip});emailList.$save(function(){$scope.firstName="",$scope.lastName="",$scope.email="",$scope.zip="",$scope.sayThankYou()},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.findShows=function(){$scope.shows=Shows.query()},$scope.findPhotos=function(){$scope.photos=Photos.query(),$scope.photos.$promise.then(function(photos){if(photos.length>0){$scope.pages=Math.ceil(photos.length/12),$scope.filteredPhotos=photos.slice(0,12);for(var preload=[],i=0;i<photos.length;i++)preload[i]=new Image,preload[i].src=photos[i].filepath}})},$scope.showPreview=function(index){"undefined"==typeof $scope.photos[index]&&index>0?index=0:"undefined"==typeof $scope.photos[index]&&0>index&&(index=$scope.photos.length-1),$scope.photoIndex=index,$scope.showPhotoPreview=!0,$scope.filepath=$scope.photos[index].filepath;var photoPreview=document.getElementById("photo-preview"),photoHeight=.8*$window.innerHeight,displayPhoto=document.getElementById("display-photo");displayPhoto.addEventListener("load",function(){var deadCenter=$window.innerWidth/2,halfOffset=displayPhoto.offsetWidth/2,centerPhoto=deadCenter-halfOffset;photoPreview.style.left=centerPhoto+"px"}),displayPhoto.style.height=photoHeight+"px",displayPhoto.src=$scope.filepath},$rootScope.loginAllowed=!1;var timesPressed=0;angular.element($window).on("keydown",function(e){81==e.keyCode&&(timesPressed++,$window.setTimeout(function(){timesPressed=0},1e4)),timesPressed>9&&($rootScope.loginAllowed=!0,timesPressed=0,$scope.$apply(function(){$location.path("/signin")})),37==e.keyCode&&$scope.showPhotoPreview&&$scope.showPreview($scope.photoIndex-1),39==e.keyCode&&$scope.showPhotoPreview&&$scope.showPreview($scope.photoIndex+1)}),$scope.prevPage=function(){$scope.photoPage>1&&$scope.photoPage--},$scope.nextPage=function(){$scope.photoPage<$scope.pages&&$scope.photoPage++},$scope.$watch("photoPage + numPerPage",function(){var begin=($scope.photoPage-1)*$scope.numPerPage,end=begin+$scope.numPerPage;$scope.filteredPhotos=$scope.photos.slice(begin,end)}),$scope.findPhotos()}]),angular.module("core").directive("convertTime",[function(){return{restrict:"E",scope:{time:"="},template:"{{time}}",controller:["$scope",function($scope){var convertTime=function(time){var split=time.toString().split(":"),hour=parseInt(split[0]),minute=split[1],ampm="AM";return hour>12&&(ampm="PM",hour-=12),time=hour+":"+minute+" "+ampm};$scope.time=convertTime($scope.time)}]}}]),angular.module("core").filter("excludePast",[function(){return function(Shows){for(var filtered_list=[],i=0;i<Shows.length;i++){var yesterday=(new Date).getTime(),showDate=new Date(Shows[i].date).getTime();showDate>=yesterday&&filtered_list.push(Shows[i])}return filtered_list}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("email-lists").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Email list","email-lists","dropdown","/email-lists(/create)?"),Menus.addSubMenuItem("topbar","email-lists","List emails","email-lists"),Menus.addSubMenuItem("topbar","email-lists","Add email to list","email-lists/create")}]),angular.module("email-lists").config(["$stateProvider",function($stateProvider){$stateProvider.state("listEmailLists",{url:"/email-lists",templateUrl:"modules/email-lists/views/list-email-lists.client.view.html"}).state("createEmailList",{url:"/email-lists/create",templateUrl:"modules/email-lists/views/create-email-list.client.view.html"}).state("viewEmailList",{url:"/email-lists/:emailListId",templateUrl:"modules/email-lists/views/view-email-list.client.view.html"}).state("editEmailList",{url:"/email-lists/:emailListId/edit",templateUrl:"modules/email-lists/views/edit-email-list.client.view.html"})}]),angular.module("email-lists").controller("EmailListsController",["$scope","$stateParams","$location","Authentication","EmailLists",function($scope,$stateParams,$location,Authentication,EmailLists){$scope.authentication=Authentication,$scope.create=function(){var emailList=new EmailLists({name:this.name});emailList.$save(function(response){$location.path("email-lists/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(emailList){if(emailList){emailList.$remove();for(var i in $scope.emailLists)$scope.emailLists[i]===emailList&&$scope.emailLists.splice(i,1)}else $scope.emailList.$remove(function(){$location.path("email-lists")})},$scope.update=function(){var emailList=$scope.emailList;emailList.$update(function(){$location.path("email-lists/"+emailList._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.emailLists=EmailLists.query()},$scope.findOne=function(){$scope.emailList=EmailLists.get({emailListId:$stateParams.emailListId})}}]),angular.module("email-lists").factory("EmailLists",["$resource",function($resource){return $resource("email-lists/:emailListId",{emailListId:"@_id"},{update:{method:"PUT"}})}]),angular.module("photos").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Photos","photos","dropdown","/admin/photos(/create)?"),Menus.addSubMenuItem("topbar","photos","List Photos","admin/photos"),Menus.addSubMenuItem("topbar","photos","New Photos","admin/photos/create")}]),angular.module("photos").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPhotos",{url:"/admin/photos",templateUrl:"modules/photos/views/list-photos.client.view.html"}).state("createPhoto",{url:"/admin/photos/create",templateUrl:"modules/photos/views/create-photo.client.view.html"}).state("viewPhoto",{url:"/admin/photos/:photoId",templateUrl:"modules/photos/views/view-photo.client.view.html"}).state("editPhoto",{url:"/admin/photos/:photoId/edit",templateUrl:"modules/photos/views/edit-photo.client.view.html"})}]),angular.module("photos").controller("PhotosController",["$scope","$upload","$stateParams","$location","Authentication","Photos",function($scope,$upload,$stateParams,$location,Authentication,Photos){$scope.authentication=Authentication,$scope.create=function(){("undefined"==typeof $scope.createPhotos||$scope.createPhotos.length<1)&&($scope.error="Upload at least 1 image!"),angular.forEach($scope.createPhotos,function(filepath){var photo=new Photos({filepath:filepath,credit:$scope.credit,where:$scope.where});photo.$save(function(){$scope.createPhotos=[]},function(errorResponse){$scope.error=errorResponse.data.message})})},$scope.remove=function(photo){if(photo){photo.$remove();for(var i in $scope.photos)$scope.photos[i]===photo&&$scope.photos.splice(i,1)}else $scope.photo.$remove(function(){$location.path("photos")})},$scope.update=function(){var photo=$scope.photo;photo.$update(function(){$location.path("photos/"+photo._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.photos=Photos.query()},$scope.findOne=function(){$scope.photo=Photos.get({photoId:$stateParams.photoId})},$scope.onFileSelect=function($files){for(var i=0;i<$files.length;i++){var file=$files[i];$scope.upload=$upload.upload({url:"/photos/upload",method:"POST",headers:{moduleOrigin:"photos"},file:file}).progress(function(evt){console.log("percent: "+parseInt(100*evt.loaded/evt.total))}).success(function(data){"undefined"==typeof $scope.createPhotos&&($scope.createPhotos=[]);var path=data.filepath,filename=path.replace(/^.*[\\\/]/,""),relPath="/modules/photos/img/"+filename;$scope.createPhotos.push(relPath),$scope.error=""}).error(function(err){console.log("Error: ",err)})}}}]),angular.module("photos").factory("Photos",["$resource",function($resource){return $resource("photos/:photoId",{photoId:"@_id"},{update:{method:"PUT"}})}]),angular.module("shows").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Shows","shows","dropdown","admin/shows(/create)?"),Menus.addSubMenuItem("topbar","shows","List Shows","admin/shows"),Menus.addSubMenuItem("topbar","shows","New Shows","admin/shows/create")}]),angular.module("shows").config(["$stateProvider",function($stateProvider){$stateProvider.state("listShows",{url:"/admin/shows",templateUrl:"modules/shows/views/list-shows.client.view.html"}).state("createShow",{url:"/admin/shows/create",templateUrl:"modules/shows/views/create-show.client.view.html"}).state("viewShow",{url:"/admin/shows/:showId",templateUrl:"modules/shows/views/view-show.client.view.html"}).state("editShow",{url:"/admin/shows/:showId/edit",templateUrl:"modules/shows/views/edit-show.client.view.html"})}]),angular.module("shows").controller("ShowsController",["$scope","$stateParams","$location","Authentication","Shows",function($scope,$stateParams,$location,Authentication,Shows){$scope.authentication=Authentication,$scope.create=function(){var show=new Shows({venue:this.venue,street:this.street,city:this.city,state:this.state,date:this.date,doorsTime:this.doorsTime,setTime:this.setTime,link:this.link});show.$save(function(response){$location.path("admin/shows/"+response._id),$scope.venue="",$scope.street="",$scope.city="",$scope.state="",$scope.showDate="",$scope.doorsTime="",$scope.setTime="",$scope.link=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(show){if(show){show.$remove();for(var i in $scope.shows)$scope.shows[i]===show&&$scope.shows.splice(i,1)}else $scope.show.$remove(function(){$location.path("admin/shows")})},$scope.update=function(){var show=$scope.show;show.$update(function(){$location.path("admin/shows/"+show._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.shows=Shows.query()},$scope.findOne=function(){$scope.show=Shows.get({showId:$stateParams.showId}),$scope.show.$promise.then(function(show){show.setTimeConv=convertTime(show.setTime),show.doorsTimeConv=convertTime(show.doorsTime)})};var convertTime=function(time){var split=time.toString().split(":"),hour=parseInt(split[0]),minute=split[1],ampm="AM";return hour>12&&(ampm="PM",hour-=12),time=hour+":"+minute+" "+ampm}}]),angular.module("shows").factory("Shows",["$resource",function($resource){return $resource("admin/shows/:showId",{showId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$rootScope","$scope","$http","$location","Authentication",function($rootScope,$scope,$http,$location,Authentication){$scope.authentication=Authentication,($scope.authentication.user||!$rootScope.loginAllowed)&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);